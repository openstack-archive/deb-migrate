Description: Fix <obj>.quote -> <obj>.name.quote
 In SQLA 0.9.x, the API changed, this updates it, while keeping compat with old
 version (conditional sqlalchemy.__version__ testing).
Author: Thomas Goirand <zigo@debian.org>
Forwarded: no
Last-Update: 2014-03-01

--- migrate-0.8.2.orig/migrate/changeset/ansisql.py
+++ migrate-0.8.2/migrate/changeset/ansisql.py
@@ -163,6 +163,11 @@ class ANSISchemaChanger(AlterTableVisito
     def visit_table(self, table):
         """Rename a table. Other ops aren't supported."""
         self.start_alter_table(table)
+        sqla_majv,sqla_medv,sqla_minv = sqlalchemy.__version__.split('.')
+        if sqla_medv < 9:
+            q = table.quote
+        else:
+            q = table.name.quote
         self.append("RENAME TO %s" % self.preparer.quote(table.new_name,
                                                          table.quote))
         self.execute()
--- migrate-0.8.2.orig/migrate/changeset/schema.py
+++ migrate-0.8.2/migrate/changeset/schema.py
@@ -601,11 +601,16 @@ populated with defaults
     # TODO: this is fixed in 0.6
     def copy_fixed(self, **kw):
         """Create a copy of this ``Column``, with all attributes."""
+        sqla_majv,sqla_medv,sqla_minv = sqlalchemy.__version__.split('.')
+        if sqla_medv < 9:
+            q = self.quote
+        else:
+            q = self.name.quote
         return sqlalchemy.Column(self.name, self.type, self.default,
             key=self.key,
             primary_key=self.primary_key,
             nullable=self.nullable,
-            quote=self.quote,
+            quote=q,
             index=self.index,
             unique=self.unique,
             onupdate=self.onupdate,
--- migrate-0.8.2.orig/migrate/changeset/databases/mysql.py
+++ migrate-0.8.2/migrate/changeset/databases/mysql.py
@@ -2,6 +2,7 @@
    MySQL database specific implementations of changeset classes.
 """
 
+import sqlalchemy
 from sqlalchemy.databases import mysql as sa_base
 from sqlalchemy import types as sqltypes
 
@@ -34,7 +35,12 @@ class MySQLSchemaChanger(MySQLSchemaGene
                 first = primary_keys.pop(0)
                 if first.name == delta.current_name:
                     colspec += " AUTO_INCREMENT"
-        old_col_name = self.preparer.quote(delta.current_name, table.quote)
+        sqla_majv,sqla_medv,sqla_minv = sqlalchemy.__version__.split('.')
+        if sqla_medv < 9:
+            q = table.quote
+        else:
+            q = table.name.quote
+        old_col_name = self.preparer.quote(delta.current_name, q)
 
         self.start_alter_table(table)
 
